[{"content":"无状态的 HTTP 协议 Cookie 的配置 Domain：也就是 Cookie 可以用在什么域名下，按照最小化原则来设定。 Path：Cookie 可以用在什么路径下，同样按照最小化原则来设定。 Max-Age 和 Expires：过期时间，只保留必要时间。 Http-Only: 设置为 true 的话，那么浏览器上的 JS 代码将无法使用这个 Cookie。永远设置为 true。 Secure: 只能用于 HTTPS 协议, 生产环境永远设置为 true。 SameSite：是否允许跨站发送 Cookie，尽量避免。 Session 因为 Cookie 本身不安全的特性, 所以大部分时候，我们都只在 Cookie 里面放一些不太关键的数据。\n关键数据我们希望放在后端，这个存储的东西就叫做 Session。\n因此在登录里面，我们就可以通过 Session 来记录登录状态。\nSession 插件的使用 在 Gin 框架中，session 是通过 github.com/gin-contrib/sessions 插件来实现的。它可以用来管理用户会话（session），并支持多种存储机制，例如内存存储、Redis、文件存储等。\nGin 的 Session 插件分为两个部分：\n一个是在 middleware 里面接入，它会帮你从 Cookie 里面找到 sess_id，再根据 sess_id 找到对应的 Session。\n另一部分就是拿到这个 Session 之后，就可以为所欲为了，例如用于校验是否登录。\n以下是使用 gin-contrib/sessions 的基本步骤：\n1. 安装依赖 首先，确保你已经安装了 gin-contrib/sessions 插件：\n1 2 go get github.com/gin-contrib/sessions go get github.com/gin-contrib/sessions/cookie 2. 导入相关包 在你的 Go 文件中导入需要的包：\n1 2 3 4 5 import ( \u0026#34;github.com/gin-contrib/sessions\u0026#34; \u0026#34;github.com/gin-contrib/sessions/cookie\u0026#34; \u0026#34;github.com/gin-gonic/gin\u0026#34; ) 3. 初始化 Session 中间件 接下来需要在 Gin 的路由中初始化 session 中间件。在这里我们使用 cookie 作为 session 的存储方式：\n1 2 3 4 5 6 7 8 9 10 11 12 func main() { router := gin.Default() // 使用 Cookie 存储 session store := cookie.NewStore([]byte(\u0026#34;secret\u0026#34;)) router.Use(sessions.Sessions(\u0026#34;mysession\u0026#34;, store)) router.GET(\u0026#34;/login\u0026#34;, loginHandler) router.GET(\u0026#34;/profile\u0026#34;, authRequired(), profileHandler) router.Run(\u0026#34;:8080\u0026#34;) } cookie.NewStore([]byte(\u0026quot;secret\u0026quot;)) 是用于生成一个基于 Cookie 的 session 存储。secret 是用于加密 session 数据的密钥，应该使用一个足够随机的值。 Sessions(\u0026quot;mysession\u0026quot;, store) 设置 session 名称为 mysession，这会影响 Cookie 的名字。 4. 设置和获取 Session 你可以通过 sessions.Get() 获取 session，然后可以对 session 数据进行存取。\n设置 session 值 1 2 3 4 5 6 7 func loginHandler(c *gin.Context) { session := sessions.Default(c) session.Set(\u0026#34;user\u0026#34;, \u0026#34;JohnDoe\u0026#34;) session.Save() // 保存 session 以便它被持久化 c.JSON(200, gin.H{\u0026#34;message\u0026#34;: \u0026#34;logged in\u0026#34;}) } 获取 session 值 1 2 3 4 5 6 7 8 9 10 11 func profileHandler(c *gin.Context) { session := sessions.Default(c) user := session.Get(\u0026#34;user\u0026#34;) if user == nil { c.JSON(401, gin.H{\u0026#34;message\u0026#34;: \u0026#34;unauthorized\u0026#34;}) return } c.JSON(200, gin.H{\u0026#34;user\u0026#34;: user}) } 5. 认证中间件示例 你可以使用 session 来保护路由，例如，检查用户是否已登录：\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 func authRequired() gin.HandlerFunc { return func(c *gin.Context) { session := sessions.Default(c) user := session.Get(\u0026#34;user\u0026#34;) if user == nil { c.JSON(401, gin.H{\u0026#34;message\u0026#34;: \u0026#34;unauthorized\u0026#34;}) c.Abort() return } c.Next() } } 6. 配置其他存储方式 除了 cookie，sessions 插件还支持多种其他存储机制，例如 Redis。你可以使用 Redis 来替代 Cookie 存储：\n1 2 3 4 5 import \u0026#34;github.com/gin-contrib/sessions/redis\u0026#34; store, _ := redis.NewStore(10, \u0026#34;tcp\u0026#34;, \u0026#34;localhost:6379\u0026#34;, \u0026#34;\u0026#34;, []byte(\u0026#34;secret\u0026#34;)) //参数分别为最大空闲连接数，协议，ip地址，redis密码，用于加密的字符串 router.Use(sessions.Sessions(\u0026#34;mysession\u0026#34;, store)) 这样，session 数据就会存储在 Redis 中。\n","date":"2024-09-27T13:19:43.722Z","permalink":"https://QuietTraveler.github.io/p/%E6%97%A0%E7%8A%B6%E6%80%81%E7%9A%84-http-%E5%8D%8F%E8%AE%AE/","title":"无状态的 HTTP 协议"},{"content":"三种交换方式 计算机网络学科中，有三种常见的交换方式，它们用于路由和转发数据包以实现设备之间的通信。这三种交换方式是电路交换、分组交换和消息交换：\n电路交换（Circuit Switching）：\n电路交换是一种早期的通信方式，通常用于传统电话网络。 在电路交换中，通信设备之间建立了一个物理通路或电路，该通路在通信会话期间一直保持打开状态。 这意味着在通话期间，网络资源（例如带宽）始终保持分配给特定的通话，无论是否有数据传输。 电路交换适用于需要实时通信和保证带宽的应用，但可能会浪费资源，因为电路在通话期间一直被占用。 分组交换（Packet Switching）：\n分组交换是现代计算机网络中最常见的交换方式。 在分组交换中，数据被分成小的数据包，并独立地传输。 这些数据包在网络中根据目标地址进行路由，它们可能采取不同的路径到达目的地，然后再重新组装以还原原始数据。 分组交换适用于互联网和局域网，它具有更好的资源利用率，但可能导致不同数据包的延迟和乱序到达。 报文交换（Message Switching）**：\n消息交换是一种较少使用的交换方式，它类似于分组交换。 在消息交换中，整个消息或邮件被传输，而不是将其分割成小数据包。 消息在网络中根据目标地址进行路由，并在目标节点接收整个消息。 这种方式用于电子邮件等应用，其中消息以整体形式传输，而不需要实时交付。 这三种交换方式在计算机网络中具有各自的特点和应用场景。电路交换适用于需要实时、保证带宽的通信，分组交换是互联网通信的基础，而报文交换则适用于需要传输整个消息或邮件的应用。选择合适的交换方式取决于通信需求、资源可用性和网络设计。\n下面来详细看看三种交换方式。\n电路交换 电话交换机接通电话线的方式被称为电路交换。\n从通信资源的分配角度来看，交换就是按照某种方式动态分配传输线路的资源。\n电路交换的三个步骤\n建立连接（分配通信资源） 通话 （一直占用通信资源） 释放连接（归还通信资源) 分组交换 发送方会将数据分成大小相同的组块，即构造分组，然后发送分组。各个分组会被送到某一个路由器（不一定同一个路由器），此时路由器会缓存分组，然后转发分组。就这样，分组会在各个路由器中被转发，直到抵到接收方。接收方会将接受的分组还原成对应的数据（报文）。\n报文交换 报文交换常用于电子邮件等应用中，其中邮件消息被传输到目标邮件服务器，然后再由邮件服务器将邮件送达到收件人的邮箱。这种方式适用于非实时通信，如电子邮件通信。\n尽管报文交换在一些应用中有其用途，但它相对较少使用，特别是在现代互联网中，分组交换是主要的数据交换方式。\n电路交换，报文交换，分组交换之间的对比 ","date":"2024-05-20T21:37:00Z","permalink":"https://QuietTraveler.github.io/p/%E4%B8%89%E7%A7%8D%E4%BA%A4%E6%8D%A2%E6%96%B9%E5%BC%8F/","title":"三种交换方式"},{"content":"正文测试 而这些并不是完全重要，更加重要的问题是， 带着这些问题，我们来审视一下学生会退会。 既然如何， 对我个人而言，学生会退会不仅仅是一个重大的事件，还可能会改变我的人生。 我们不得不面对一个非常尴尬的事实，那就是， 可是，即使是这样，学生会退会的出现仍然代表了一定的意义。 学生会退会，发生了会如何，不发生又会如何。 经过上述讨论， 生活中，若学生会退会出现了，我们就不得不考虑它出现了的事实。 学生会退会，到底应该如何实现。 这样看来， 在这种困难的抉择下，本人思来想去，寝食难安。 对我个人而言，学生会退会不仅仅是一个重大的事件，还可能会改变我的人生。 就我个人来说，学生会退会对我的意义，不能不说非常重大。 莎士比亚曾经提到过，人的一生是短的，但如果卑劣地过这一生，就太长了。这似乎解答了我的疑惑。 莫扎特说过一句富有哲理的话，谁和我一样用功，谁就会和我一样成功。这启发了我， 对我个人而言，学生会退会不仅仅是一个重大的事件，还可能会改变我的人生。 学生会退会，到底应该如何实现。 一般来说， 从这个角度来看， 这种事实对本人来说意义重大，相信对这个世界也是有一定意义的。 在这种困难的抉择下，本人思来想去，寝食难安。 了解清楚学生会退会到底是一种怎么样的存在，是解决一切问题的关键。 一般来说， 生活中，若学生会退会出现了，我们就不得不考虑它出现了的事实。 问题的关键究竟为何？ 而这些并不是完全重要，更加重要的问题是。\n奥斯特洛夫斯基曾经说过，共同的事业，共同的斗争，可以使人们产生忍受一切的力量。　带着这句话，我们还要更加慎重的审视这个问题： 一般来讲，我们都必须务必慎重的考虑考虑。 既然如此， 这种事实对本人来说意义重大，相信对这个世界也是有一定意义的。 带着这些问题，我们来审视一下学生会退会。 我认为， 我认为， 在这种困难的抉择下，本人思来想去，寝食难安。 问题的关键究竟为何？ 每个人都不得不面对这些问题。 在面对这种问题时， 要想清楚，学生会退会，到底是一种怎么样的存在。 我认为， 既然如此， 每个人都不得不面对这些问题。 在面对这种问题时， 那么， 我认为， 学生会退会因何而发生。\n引用 思念是最暖的忧伤像一双翅膀\n让我停不了飞不远在过往游荡\n不告而别的你 就算为了我着想\n这么沉痛的呵护 我怎么能翱翔\n最暖的憂傷 - 田馥甄\n图片 1 2 3 ![Photo by Florian Klauer on Unsplash](florian-klauer-nptLmg6jqDo-unsplash.jpg) ![Photo by Luca Bravo on Unsplash](luca-bravo-alS7ewQ41M8-unsplash.jpg) ![Photo by Helena Hertz on Unsplash](helena-hertz-wWZzXlDpMog-unsplash.jpg) ![Photo by Hudai Gayiran on Unsplash](hudai-gayiran-3Od_VKcDEAA-unsplash.jpg) 相册语法来自 Typlog\n","date":"2020-09-09T00:00:00Z","image":"https://QuietTraveler.github.io/p/test-chinese/helena-hertz-wWZzXlDpMog-unsplash_hu4699868770670889127.jpg","permalink":"https://QuietTraveler.github.io/p/test-chinese/","title":"Chinese Test"},{"content":"This article offers a sample of basic Markdown syntax that can be used in Hugo content files, also it shows whether basic HTML elements are decorated with CSS in a Hugo theme.\nHeadings The following HTML \u0026lt;h1\u0026gt;—\u0026lt;h6\u0026gt; elements represent six levels of section headings. \u0026lt;h1\u0026gt; is the highest section level while \u0026lt;h6\u0026gt; is the lowest.\nH1 H2 H3 H4 H5 H6 Paragraph Xerum, quo qui aut unt expliquam qui dolut labo. Aque venitatiusda cum, voluptionse latur sitiae dolessi aut parist aut dollo enim qui voluptate ma dolestendit peritin re plis aut quas inctum laceat est volestemque commosa as cus endigna tectur, offic to cor sequas etum rerum idem sintibus eiur? Quianimin porecus evelectur, cum que nis nust voloribus ratem aut omnimi, sitatur? Quiatem. Nam, omnis sum am facea corem alique molestrunt et eos evelece arcillit ut aut eos eos nus, sin conecerem erum fuga. Ri oditatquam, ad quibus unda veliamenimin cusam et facea ipsamus es exerum sitate dolores editium rerore eost, temped molorro ratiae volorro te reribus dolorer sperchicium faceata tiustia prat.\nItatur? Quiatae cullecum rem ent aut odis in re eossequodi nonsequ idebis ne sapicia is sinveli squiatum, core et que aut hariosam ex eat.\nBlockquotes The blockquote element represents content that is quoted from another source, optionally with a citation which must be within a footer or cite element, and optionally with in-line changes such as annotations and abbreviations.\nBlockquote without attribution Tiam, ad mint andaepu dandae nostion secatur sequo quae. Note that you can use Markdown syntax within a blockquote.\nBlockquote with attribution Don\u0026rsquo;t communicate by sharing memory, share memory by communicating.\n— Rob Pike1\nTables Tables aren\u0026rsquo;t part of the core Markdown spec, but Hugo supports supports them out-of-the-box.\nName Age Bob 27 Alice 23 Inline Markdown within tables Italics Bold Code italics bold code A B C D E F Lorem ipsum dolor sit amet, consectetur adipiscing elit. Phasellus ultricies, sapien non euismod aliquam, dui ligula tincidunt odio, at accumsan nulla sapien eget ex. Proin eleifend dictum ipsum, non euismod ipsum pulvinar et. Vivamus sollicitudin, quam in pulvinar aliquam, metus elit pretium purus Proin sit amet velit nec enim imperdiet vehicula. Ut bibendum vestibulum quam, eu egestas turpis gravida nec Sed scelerisque nec turpis vel viverra. Vivamus vitae pretium sapien Code Blocks Code block with backticks 1 2 3 4 5 6 7 8 9 10 \u0026lt;!doctype html\u0026gt; \u0026lt;html lang=\u0026#34;en\u0026#34;\u0026gt; \u0026lt;head\u0026gt; \u0026lt;meta charset=\u0026#34;utf-8\u0026#34;\u0026gt; \u0026lt;title\u0026gt;Example HTML5 Document\u0026lt;/title\u0026gt; \u0026lt;/head\u0026gt; \u0026lt;body\u0026gt; \u0026lt;p\u0026gt;Test\u0026lt;/p\u0026gt; \u0026lt;/body\u0026gt; \u0026lt;/html\u0026gt; Code block indented with four spaces \u0026lt;!doctype html\u0026gt; \u0026lt;html lang=\u0026quot;en\u0026quot;\u0026gt; \u0026lt;head\u0026gt; \u0026lt;meta charset=\u0026quot;utf-8\u0026quot;\u0026gt; \u0026lt;title\u0026gt;Example HTML5 Document\u0026lt;/title\u0026gt; \u0026lt;/head\u0026gt; \u0026lt;body\u0026gt; \u0026lt;p\u0026gt;Test\u0026lt;/p\u0026gt; \u0026lt;/body\u0026gt; \u0026lt;/html\u0026gt; Code block with Hugo\u0026rsquo;s internal highlight shortcode 1 2 3 4 5 6 7 8 9 10 \u0026lt;!doctype html\u0026gt; \u0026lt;html lang=\u0026#34;en\u0026#34;\u0026gt; \u0026lt;head\u0026gt; \u0026lt;meta charset=\u0026#34;utf-8\u0026#34;\u0026gt; \u0026lt;title\u0026gt;Example HTML5 Document\u0026lt;/title\u0026gt; \u0026lt;/head\u0026gt; \u0026lt;body\u0026gt; \u0026lt;p\u0026gt;Test\u0026lt;/p\u0026gt; \u0026lt;/body\u0026gt; \u0026lt;/html\u0026gt; Diff code block 1 2 3 4 5 [dependencies.bevy] git = \u0026#34;https://github.com/bevyengine/bevy\u0026#34; rev = \u0026#34;11f52b8c72fc3a568e8bb4a4cd1f3eb025ac2e13\u0026#34; - features = [\u0026#34;dynamic\u0026#34;] + features = [\u0026#34;jpeg\u0026#34;, \u0026#34;dynamic\u0026#34;] List Types Ordered List First item Second item Third item Unordered List List item Another item And another item Nested list Fruit Apple Orange Banana Dairy Milk Cheese Other Elements — abbr, sub, sup, kbd, mark GIF is a bitmap image format.\nH2O\nXn + Yn = Zn\nPress CTRL + ALT + Delete to end the session.\nMost salamanders are nocturnal, and hunt for insects, worms, and other small creatures.\nHyperlinked image The above quote is excerpted from Rob Pike\u0026rsquo;s talk during Gopherfest, November 18, 2015.\u0026#160;\u0026#x21a9;\u0026#xfe0e;\n","date":"2019-03-11T00:00:00Z","image":"https://QuietTraveler.github.io/p/markdown-syntax-guide/pawel-czerwinski-8uZPynIu-rQ-unsplash_hu6307248181568134095.jpg","permalink":"https://QuietTraveler.github.io/p/markdown-syntax-guide/","title":"Markdown Syntax Guide"},{"content":"Lorem est tota propiore conpellat pectoribus de pectora summo.\nRedit teque digerit hominumque toris verebor lumina non cervice subde tollit usus habet Arctonque, furores quas nec ferunt. Quoque montibus nunc caluere tempus inhospita parcite confusaque translucet patri vestro qui optatis lumine cognoscere flos nubis! Fronde ipsamque patulos Dryopen deorum.\nExierant elisi ambit vivere dedere Duce pollice Eris modo Spargitque ferrea quos palude Rursus nulli murmur; hastile inridet ut ab gravi sententia! Nomine potitus silentia flumen, sustinet placuit petis in dilapsa erat sunt. Atria tractus malis.\nComas hunc haec pietate fetum procerum dixit Post torum vates letum Tiresia Flumen querellas Arcanaque montibus omnes Quidem et Vagus elidunt The Van de Graaf Canon\nMane refeci capiebant unda mulcebat Victa caducifer, malo vulnere contra dicere aurato, ludit regale, voca! Retorsit colit est profanae esse virescere furit nec; iaculi matertera et visa est, viribus. Divesque creatis, tecta novat collumque vulnus est, parvas. Faces illo pepulere tempus adest. Tendit flamma, ab opes virum sustinet, sidus sequendo urbis.\nIubar proles corpore raptos vero auctor imperium; sed et huic: manus caeli Lelegas tu lux. Verbis obstitit intus oblectamina fixis linguisque ausus sperare Echionides cornuaque tenent clausit possit. Omnia putatur. Praeteritae refert ausus; ferebant e primus lora nutat, vici quae mea ipse. Et iter nil spectatae vulnus haerentia iuste et exercebat, sui et.\nEurytus Hector, materna ipsumque ut Politen, nec, nate, ignari, vernum cohaesit sequitur. Vel mitis temploque vocatus, inque alis, oculos nomen non silvis corpore coniunx ne displicet illa. Crescunt non unus, vidit visa quantum inmiti flumina mortis facto sic: undique a alios vincula sunt iactata abdita! Suspenderat ego fuit tendit: luna, ante urbem Propoetides parte.\n","date":"2019-03-09T00:00:00Z","image":"https://QuietTraveler.github.io/p/placeholder-text/matt-le-SJSpo9hQf7s-unsplash_hu10664154974910995856.jpg","permalink":"https://QuietTraveler.github.io/p/placeholder-text/","title":"Placeholder Text"},{"content":"Mathematical notation in a Hugo project can be enabled by using third party JavaScript libraries.\nIn this example we will be using KaTeX\nCreate a partial under /layouts/partials/math.html Within this partial reference the Auto-render Extension or host these scripts locally. Include the partial in your templates like so: 1 2 3 {{ if or .Params.math .Site.Params.math }} {{ partial \u0026#34;math.html\u0026#34; . }} {{ end }} To enable KaTeX globally set the parameter math to true in a project\u0026rsquo;s configuration To enable KaTeX on a per page basis include the parameter math: true in content files Note: Use the online reference of Supported TeX Functions\nExamples Inline math: $\\varphi = \\dfrac{1+\\sqrt5}{2}= 1.6180339887…$\nBlock math: $$ \\varphi = 1+\\frac{1} {1+\\frac{1} {1+\\frac{1} {1+\\cdots} } } $$","date":"2019-03-08T00:00:00Z","permalink":"https://QuietTraveler.github.io/p/math-typesetting/","title":"Math Typesetting"},{"content":"Emoji can be enabled in a Hugo project in a number of ways.\nThe emojify function can be called directly in templates or Inline Shortcodes.\nTo enable emoji globally, set enableEmoji to true in your site\u0026rsquo;s configuration and then you can type emoji shorthand codes directly in content files; e.g.\n🙈 :see_no_evil: 🙉 :hear_no_evil: 🙊 :speak_no_evil:\nThe Emoji cheat sheet is a useful reference for emoji shorthand codes.\nN.B. The above steps enable Unicode Standard emoji characters and sequences in Hugo, however the rendering of these glyphs depends on the browser and the platform. To style the emoji you can either use a third party emoji font or a font stack; e.g.\n1 2 3 .emoji { font-family: Apple Color Emoji, Segoe UI Emoji, NotoColorEmoji, Segoe UI Symbol, Android Emoji, EmojiSymbols; } ","date":"2019-03-05T00:00:00Z","image":"https://QuietTraveler.github.io/p/emoji-support/the-creative-exchange-d2zvqp3fpro-unsplash_hu5876398126655421130.jpg","permalink":"https://QuietTraveler.github.io/p/emoji-support/","title":"Emoji Support"}]